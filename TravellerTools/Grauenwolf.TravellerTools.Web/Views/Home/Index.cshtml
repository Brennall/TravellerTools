@model Grauenwolf.TravellerTools.Web.Models.HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
}


<div class="row">
    <h2>Location</h2>
    <table class="gridtable">
        <tr>
            <th>Sector</th>
            <td>
                @Html.DropDownList("sector", Model.SectorList(), new { onchange = "SectorChanged($('#sector')[0].value, $('#subsector')[0])" })
            </td>
            <th>Subsector</th>
            <td>
                <select id="subsector" onchange="SubsectorChanged($('#sector')[0].value, $('#subsector')[0].value, $('#world')[0])"></select>
            </td>
            <th>World</th>
            <td>
                <select id="world" onchange="WorldChanged($('#sector')[0].value, $('#world')[0].value, $('#showTradeScreen')[0], $('#selectWorldForTrade')[0])"></select>
            </td>
        </tr>
    </table>

    <h2>Trade Calculator</h2>

    <table class="gridtable">
        <tr>
            <td>
                <label> <input type="checkbox" id="mongoose2" /> Mongoose 2</label>
            </td>
            <td>
                <label> <input type="checkbox" id="advancedMode" /> Advanced Mode</label>
            </td>
            <td>
                <label> <input type="checkbox" id="illegalGoods" /> Allow Illegal Goods</label>
            </td>
            <td>
                <label> <input type="checkbox" id="advancedCharacters" />Advanced Characters</label>
            </td>
            <td>
                <label>Jump Distance</label>
                <input type="number" id="jumpDistance" value="3" />
            </td>
            <td>
                <label>Broker Score</label>
                <input type="number" id="brokerScore" value="0" />
            </td>
            <td>
                <input id="showTradeScreen" type="button" value="Generate Trade Info" onclick="GenerateTradeInfo($('#sector')[0].value, $('#world')[0].value, $('#advancedMode')[0].checked, $('#illegalGoods')[0].checked, $('#jumpDistance')[0].value, $('#brokerScore')[0].value, $('#mongoose2')[0].checked, $('#advancedCharacters')[0].checked)" style="display:none" />
                <span id="selectWorldForTrade">Select a world</span>
            </td>
        </tr>
    </table>
</div>

<div class="row">
    <h2>Animals</h2>
    <table class="gridtable">
        <tr>
            <th>Mongoose 1</th>
            <td>
                <label>Terrain</label>
                @Html.DropDownList("terrain", Model.TerrainList())
            </td>
            <td>
                <label>Animal Type</label>
                @Html.DropDownList("animalType", Model.AnimalTypeList())
                <br />
                (only used when a terrain is selected)
            </td>

            <td>
                <input id="showAnimalScreen" type="button" value="Generate Animals" onclick="GenerateAnimals($('#terrain')[0].value, $('#animalType')[0].value)" />
            </td>
        </tr>
    </table>
    <div>&nbsp;</div>
    <table class="gridtable">
        <tr>
            <th rowspan="3">Animal Encounters (preview)</th>
            <td>
                <label>Terrain</label>
                @Html.DropDownList("terrain2", Model.TerrainList())
            </td>
            <td>
                <label>Animal Class</label>
                @Html.DropDownList("animalClass", Model.AnimalClassList())
                <br />
                (only used when a terrain is selected)
            </td>

            <td>
                <input id="showAnimalEncountersScreen" type="button" value="Generate Animals" onclick="GenerateAnimalEncounters($('#sector')[0].value, $('#world')[0].value, $('#terrain2')[0].value, $('#animalClass')[0].value)" />
            </td>
        </tr>
        <tr style="display:none">
            <!-- Do we want these as individual options or should we always read from the selected world?-->
            <td>
                <label>Gravity</label> <select id="gravity">
                    <option value=""></option>
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </td>
            <td>
                <label>Atmosphere</label>
                <select id="Atmosphere">
                    <option value=""></option>
                </select>
            </td>
            <td>
                <label>Temperature</label>
                <select id="Temperature">
                    <option value=""></option>
                </select>
            </td>
            <td>
                <label>Hydrographics</label>
                <select id="Hydrographics">
                    <option value=""></option>
                </select>
            </td>
            <td>
                <label>Specials</label>
                <select id="Specials">
                    <option value=""></option>
                </select>
            </td>
        </tr>
        <tr><td colspan="10">Note: this requires <a target="_blank" href="http://www.drivethrurpg.com/product/93227/Supplement-11-Animal-Encounters">Supplment 11: Animal Encounters</a> to make sense. If you don't have that book, use the Mongoose 1 tool.</td></tr>
    </table>

</div>

<div class="row">
    <h2>Characters</h2>
    <div>This is used for creating NPCs only. Certain liberties where taken with the rules to allow for random character generation.</div>
    <table class="gridtable">
        <tr>
            <th>Career (random age)</th>
            <th colspan="15">Specific Age</th>
        </tr>
        <tr>
            <th><a href=@string.Format("/Home/Character")>Any</a></th>
            @for (var terms = 1; terms <= 15; terms++)
            {
                <td><a href=@string.Format("/Home/Character?MinAge={0}&MaxAge={1}", 18+(terms*4), 18 + (terms * 4) + 3)>@terms Terms</a></td>
            }
        </tr>

        @foreach (var career in Model.Careers.OrderBy(s => s.Key))
        {
            <tr>
                <th><a href=@string.Format("/Home/Character?Career={0}", Url.Encode( career.Key ))>@career</a></th>
                @for (var terms = 1; terms <= 15; terms++)
                {
                    <td><a href=@string.Format("/Home/Character?Career={0}&MinAge={1}&MaxAge={2}", Url.Encode(career.Key), 18+(terms*4), 18 + (terms * 4) + 3)>@terms Terms</a></td>
                }
            </tr>
        }

    </table>
</div>
<div>Note: Psionics are not yet included.</div>
<div><span style="color:red;font-weight:700;font-size:larger">Warning: </span>Permalinks become invalid whenever a new version of Traveller Tools is created.</div>



@section Scripts {
    @Scripts.Render("~/Scripts/Home/Index.js")
}
